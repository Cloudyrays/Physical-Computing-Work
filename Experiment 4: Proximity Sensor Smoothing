int proxPin = 0;              //proximity sensor will be plugged into AO
int ledPin = 8;               //LED will be plugged into digital pin 8
int proxData;                 //used to represent newest proximity data
int lastProxData;             //used to record previous proximity data to compare with newer data
int speedish;                 //used to record difference between each recorded distance

int brightness;               //will control LED brightness

int speeds[8];                //an array to hold "speedish" data from different points in time
int smoothCount;              //used to keep track of how many distance measures have been recorded

int totalled;                 //used to keep track of the sum of the speeds array contents
int smoothData;               //used to keep track of the smoothed speed data


void setup () {
  pinMode(ledPin, OUTPUT);
  
}


void draw () {
  proxData = digitalRead(proxPin);
  speedish = abs(proxData - lastProxData);         //here I'm recording the difference between the current and last proximity input
  
  
  if(smoothCount < 7) {
    speeds[smoothCount] = speedish;                //filling in the speeds array with new data
    smoothCount++;
  } else if (smoothCount == 7) {                   //if the array is full, used the contents to calculate smoothData then record-over them
    speeds[smoothCount] = speedish;
    for (int i = 0; i < 7; i++) {
      totalled = totalled + speeds[i];
    }
    smoothData = (totalled/7);
    totalled = 0;
    smoothCount = 0;
  }
  
  lastProxData = proxData;                        //now this proximity data is old news and can be used in the next loop
  
  brightness = map(smoothData, 0, 500, 0, 255);   //mapping the smoothed speed data
  digitalWrite(ledPin, brightness);               //applying this to the LED
  
}
